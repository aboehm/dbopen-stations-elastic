input {
  # download station data once a year
#  exec {
#    command => "curl -q http://data.deutschebahn.com/datasets/haltestellen/D_Bahnhof_2016_01_alle.csv |tail -n +1"
#    interval => 31536000
#    codec => line { charset => "UTF-8" }
#    add_field => {
#      year => "2016"
#      month => "01"
#    }
#  }

  # 
#  file {
#    path => "/tmp/D_Bahnhof_2016_01_alle.csv"
#    type => "DB_OPEN_CSV"
#    start_position => "beginning"
#  }

  # use input from stdin
  stdin {
    codec => line { charset => "UTF-8" }
    add_field => {
      year => "2016"
      month => "01"
    }
  }
}

filter {
# read CSV entry
  csv {
    columns => [
      "EVA_NR",
      "DS100",
      "NAME",
      "VERKEHR",
      "lon",
      "lat"
    ]
    skip_empty_columns => true
    separator => ";"
  }

  # skip first line
  if [EVA_NR] == "EVA_NR" { drop { } }

  # convert into geopoint
  mutate {
    add_field => {
      "[location][point]" => "%{lat}, %{lon}"
      "timestamp" => "%{year}-%{month}-01T00:00:00.000Z"
    }
  }

  # date the information
  date { match => ["timestamp", "ISO8601"] }

  # do conversation
  mutate {
    add_field => {
      "id" => "%{year}_%{month}_%{EVA_NR}"
      "type" => "station"
    }
    rename => {
      "lat" => "[location][latitude]"
      "lon" => "[location][longitude]"
    }
    convert => {
      "EVA_NR" => "integer"
      "year" => "integer"
      "month" => "integer"
      "[location][longitude]" => "float"
      "[location][latitude]" => "float"
    }
    remove_field => [ "command", "host", "message" ]
  }
}

output {
  elasticsearch {
    hosts => ["localhost:9200"]
    index => 'db_open_stations-%{year}'
  }
}
